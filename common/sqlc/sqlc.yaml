# https://docs.sqlc.dev/en/stable/reference/config.html#go
version: "2"
sql:
  - engine: "postgresql"
    schema: "01schema.sql"
    queries: "02query.sql"
    gen:
      go:
        # The package name to use for the generated code. Defaults to out basename.
        package: "sqlcgenerated"

        # Output directory for generated code.
        out: "sqlcgenerated"

        # Either pgx/v4, pgx/v5 or database/sql. Defaults to database/sql.
        sql_package: "pgx/v5"

        # Either github.com/jackc/pgx/v4, github.com/jackc/pgx/v5, github.com/lib/pq or github.com/go-sql-driver/mysql. No defaults. Required if query annotation :copyfrom is used.
        # sql_driver:

        # If true, add DB tags to generated structs. Defaults to false.
        # emit_db_tags: true

        # If true, include support for prepared queries. Defaults to false.
        # emit_prepared_queries: true

        # If true, output a Querier interface in the generated package. Defaults to false.
        # emit_interface: true

        # If true, struct names will mirror table names. Otherwise, sqlc attempts to singularize plural table names. Defaults to false.
        # emit_exact_table_names: true

        # If true, slices returned by :many queries will be empty instead of nil. Defaults to false.
        # emit_empty_slices: true

        # If true, autogenerated SQL statement can be exported to be accessed by another package.
        # emit_exported_queries: true

        # If true, add JSON tags to generated structs. Defaults to false.
        # emit_json_tags: true

        # If true, query results are returned as pointers to structs. Queries returning multiple results are returned as slices of pointers. Defaults to false.
        # emit_result_struct_pointers: true

        # If true, parameters are passed as pointers to structs. Defaults to false.
        # emit_params_struct_pointers: true

        # If true, generated methods will accept a DBTX argument instead of storing a DBTX on the *Queries struct. Defaults to false.
        # emit_methods_with_db_argument: true

        # If true, generated types for nullable columns are emitted as pointers (ie. *string) instead of database/sql null types (ie. NullString). Currently only supported for PostgreSQL if sql_package is pgx/v4 or pgx/v5, and for SQLite. Defaults to false.
        # emit_pointers_for_null_types: true

        # If true, generate a Valid method on enum types, indicating whether a string is a valid enum value.
        # emit_enum_valid_method: true

        # If true, emit a function per enum type that returns all valid enum values.
        # emit_all_enum_values: true

        # If true, emits the SQL statement as a code-block comment above the generated function, appending to any existing comments. Defaults to false.
        # emit_sql_as_comment: true

        # If set, add a //go:build <build_tags> directive at the beginning of each generated Go file.
        # build_tags:

        # An array of initialisms to upper-case. For example, app_id becomes AppID. Defaults to ["id"].
        # initialisms:

        # If true, "Id" in json tags will be uppercase. If false, will be camelcase. Defaults to false
        # json_tags_id_uppercase:

        # camel for camelCase, pascal for PascalCase, snake for snake_case or none to use the column name in the DB. Defaults to none.
        # json_tags_case_style:

        # If true, sqlc won't generate table and enum structs that aren't used in queries for a given package. Defaults to false.
        # omit_unused_structs:

        # Customize the name of the batch file. Defaults to batch.go.
        # output_batch_file_name:

        # Customize the name of the db file. Defaults to db.go.
        # output_db_file_name:

        # Customize the name of the models file. Defaults to models.go.
        # output_models_file_name:

        # Customize the name of the querier file. Defaults to querier.go.
        # ARS Note: as of 2025-05 the query file does not have a rename setting.
        # this setting is for an interface file and only works if emit_interface is true.
        # https://github.com/sqlc-dev/sqlc/issues/3285
        # output_querier_file_name:

        # Customize the name of the copyfrom file. Defaults to copyfrom.go.
        # output_copyfrom_file_name:

        # If specified the suffix will be added to the name of the generated files.
        # output_files_suffix:

        # The number of positional arguments that will be generated for Go functions. To always emit a parameter struct, set this to 0. Defaults to 1.
        # query_parameter_limit:

        # Customize the name of generated struct fields. See Renaming fields for usage information.
        # rename:

        # It is a collection of definitions that dictates which types are used to map a database types.
        # https://docs.sqlc.dev/en/stable/howto/overrides.html
        # overrides:
